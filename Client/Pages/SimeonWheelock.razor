@page "/SimeonWheelock"
@using Cloudcrate.AspNetCore.Blazor.Browser.Storage;
@using System.ComponentModel.DataAnnotations
@using PuzzleClient;
@inject HttpClient Http
@inject LocalStorage Storage
@inject NavigationManager NavigationManager


<h1>Simeon says</h1>

<div class="pricesticker">
    <div class="image">
        <svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 220.6 41.63">
            <path d="M12.37 19c.15-2.28-1.51-3.64-3.74-3.64-4.56 0-6.73 4.32-6.73 8.29 0 2.73 1.39 4.74 4.35 4.74a5.4 5.4 0 0 0 5.12-3.82h1.9C12.13 28.06 9.77 30 6 30s-6-2.54-6-6.31c0-4.76 3.11-9.86 8.45-9.86 3.37 0 5.94 1.66 5.82 5.21h-1.9M17.1 18.79c.52-3.47 3.23-5 6.58-5 2.11 0 5.4.71 5.4 3.4a28.88 28.88 0 0 1-1 5.16c-.69 3.44-1 4.24-1 5.15 0 .54.54.63 1 .63a6.66 6.66 0 0 0 .76-.06l-.28 1.48a8.38 8.38 0 0 1-1.56.14A1.54 1.54 0 0 1 25.34 28a7.54 7.54 0 0 1 .06-.83l-.06-.06a6.33 6.33 0 0 1-5.4 2.89c-2.84 0-5-1.24-5-4.23 0-3.23 2.63-4.27 5.4-4.74 2-.3 3.74-.15 4.95-.45s1.87-1 1.87-3c0-1.8-1.84-2.19-3.29-2.19-2.41 0-4.49.89-4.89 3.44zm9.41 2.54l-.05-.06c-.61.75-2.48.8-3.45.86-2.32.18-6.15.3-6.15 3.5 0 1.95 1.66 2.75 3.47 2.75a5.39 5.39 0 0 0 5.58-4.47l.6-2.58M32.76 24.53c0 3 2.2 3.85 4.4 3.85 1.69 0 3.92-.85 3.92-2.81s-2.14-2.57-4.19-3.38-4.16-1.72-4.16-4.19c0-3 3.26-4.18 5.76-4.18 3.25 0 5.61 1.39 5.55 4.92h-1.9c.15-2.34-1.51-3.35-3.65-3.35-1.66 0-3.86.5-3.86 2.61 0 1.42 1.54 2.13 3.29 2.81 2.14.83 5.06 1.69 5.06 4.5.02 3.4-3.32 4.69-6.27 4.69s-6-1.6-5.85-5.42h1.9M49.71 8.36h1.9L49.71 17h.06a6.55 6.55 0 0 1 5.46-3.23c2.71 0 4.7 1.18 4.7 4.12a9.31 9.31 0 0 1-.24 1.8l-2.14 9.81h-1.9l2.17-9.87a6.49 6.49 0 0 0 .18-1.52c0-2-1.57-2.76-3.26-2.76-2.74 0-5.25 2.43-6.09 6.31L47 29.51h-1.9l4.61-21.15M73.24 19.74A2.31 2.31 0 0 0 72.6 18a2.4 2.4 0 0 0-1.66-.59c-3-.12-4 3-4 5.33s.87 3.53 2.6 3.53a3 3 0 0 0 3-2.61h5C76.61 28 73.51 30 69.37 30c-4.34 0-7.51-2.16-7.51-6.69 0-5.45 3.66-9.57 9.32-9.57 3.95 0 7 1.93 7 6h-5M99.63 14.13h5.13l-.42 1.87h.06a6.72 6.72 0 0 1 5.39-2.31c2.81 0 4.5 1.69 4.5 4.33a17.34 17.34 0 0 1-.54 3.31l-1.87 8.18h-5.13l1.78-8.15a10 10 0 0 0 .3-1.95 1.73 1.73 0 0 0-1.83-1.87c-3.17 0-3.53 2.93-4.07 5.45l-1.39 6.52h-5.16l3.25-15.38M116.13 14.13h5.18l.64 10.85h.06l5.09-10.85h5.37l-8.44 15.38h-5.97l-1.93-15.38M136.2 23.05a8.37 8.37 0 0 0-.06 1 2.49 2.49 0 0 0 2.78 2.47c1.75 0 2.59-.66 3-1.69h5c-1.24 3.67-4.4 5.09-8.2 5.09-4.35 0-7.52-2.16-7.52-6.69 0-5.45 3.66-9.57 9.33-9.57 4 0 7.15 2.28 7.15 6.72a17.45 17.45 0 0 1-.19 2.64zm6.52-2.81c.15-1.72-.66-3.14-2.38-3.14-2.12 0-3.23 1.21-3.78 3.14h6.16M151.65 14.13h5l-.58 2.52h.06a5.7 5.7 0 0 1 4.92-3 3.85 3.85 0 0 1 1.72.27l-1 4.44a8.52 8.52 0 0 0-2.32-.29c-2.8 0-3.89 1.74-4.4 4.35l-1.51 7.05h-5.13l3.26-15.38M172 14.13h3.23l-.7 3.26h-3.25L170 23.2a9 9 0 0 0-.27 1.84c0 .74.73.8 1.6.8.54 0 1.05-.06 1.6-.09l-.79 3.76c-1 0-2 .17-3 .17-2.37 0-4.85-.32-4.85-2.66a20 20 0 0 1 .6-4.06l1.21-5.57h-2.59l.69-3.26h2.59l1-4.62h5.13l-1 4.62M179.65 23.05a8.37 8.37 0 0 0-.06 1 2.49 2.49 0 0 0 2.78 2.47c1.74 0 2.59-.66 3-1.69h5c-1.24 3.7-4.37 5.17-8.21 5.17-4.35 0-7.51-2.16-7.51-6.69 0-5.45 3.64-9.57 9.32-9.57 4 0 7.14 2.28 7.14 6.72a17.47 17.47 0 0 1-.18 2.64zm6.52-2.81c.15-1.72-.67-3.14-2.39-3.14-2.11 0-3.22 1.21-3.77 3.14h6.16M195.1 14.13h5l-.58 2.52h.06a5.7 5.7 0 0 1 4.92-3 3.83 3.83 0 0 1 1.72.27l-1 4.44a8.58 8.58 0 0 0-2.32-.29c-2.8 0-3.89 1.74-4.4 4.35l-1.5 7.09h-5.13l3.26-15.38M209.73 24.47a2.09 2.09 0 0 0 .57 1.6 2.94 2.94 0 0 0 2 .62c.87 0 2.29-.32 2.29-1.57s-1.24-1.39-3.75-2c-2.28-.5-4.31-1.3-4.31-4.21 0-4.11 4.23-5.21 7.58-5.21s6.66 1 6.45 5h-4.65a1.71 1.71 0 0 0-.39-1.34 2.16 2.16 0 0 0-1.52-.56c-1.06 0-2.33.36-2.33 1.45s1.66 1.31 3.5 1.75c2.9.71 4.55 1.36 4.55 4.38 0 4.71-4.34 5.57-8 5.57-4 0-6.54-1.48-6.69-5.48h4.7M83.37 2.61c-7.2 2.91-11 5.46-12.83 7L71 7.39l-.16.25.19-.87-3.58 5.79 6.91-2.8-.8.06.19-.07-2.87.25A57.59 57.59 0 0 1 84.3 3.62c2.15-.63 18.53-4 10.61 9.21q-.7 1.18-1.5 2.34a6 6 0 0 1 1.37 1.46c1.15-1.41 2.22-2.85 3.22-4.31 8.69-12.59-1.7-14.95-14.63-9.71z"></path>
            <path d="M90.59 19.62a4.54 4.54 0 0 0-.12-.53 64.57 64.57 0 0 1-5.75 6.08 68.64 68.64 0 0 1-3.55 3.08c-8.09 6.59-17.24 11.09-24 11.73-16.27 1.55-5.73-12.14-5.73-12.14.18-.3 1.35-2.15 1.35-2.15-7.46 6.54-12.56 17.79 3.67 15.68 7.46-1 17-5.7 25.62-12.46q1.78-1.39 3.5-2.89 2.61-2.28 5-4.76a10.47 10.47 0 0 0 .01-1.64zM90.48 19.07a4.54 4.54 0 0 1 .12.53 2.58 2.58 0 0 0-.12-.53zM90.64 21.52v-.3a2.17 2.17 0 0 0 0 .3z"></path>
            <path d="M90.59 19.62a10.47 10.47 0 0 1 .06 1.64 5.33 5.33 0 0 0 0-.56 5.9 5.9 0 0 0-.06-1.08zM94.77 16.65a6 6 0 0 0-1.37-1.46 6 6 0 0 1 1.37 1.46z"></path>
            <path d="M95.49 18.2a5.32 5.32 0 0 0-.71-1.57 6 6 0 0 0-1.36-1.47 5.68 5.68 0 0 0-.6-.4 8.48 8.48 0 0 0-4.39-1.09c-5.67 0-9.32 4.12-9.32 9.57a6.26 6.26 0 0 0 2.07 5c1.21-1 2.4-2 3.55-3.08a4.14 4.14 0 0 1-.49-2.09c0-2.07 1.09-5.69 3.86-5.69a2.26 2.26 0 0 1 2.38 1.7 2.58 2.58 0 0 1 .11.55 5.9 5.9 0 0 1 .09 1.06 5.33 5.33 0 0 1 0 .56v.3c-.22 2.21-1.32 4.71-3.91 4.71a2.53 2.53 0 0 1-1.15-.26q-1.71 1.5-3.5 2.89a9.06 9.06 0 0 0 4.49 1c5.67 0 9.2-4 9.2-9.48a7.68 7.68 0 0 0-.32-2.21z"></path>
        </svg>
    </div>
    <div class="price">@_price</div>
    <div class="description">Dotnet Blazor</div>
    <div class="barcode">@_barcode</div>
    <div class="smalltext">@_smallText</div>
</div>

<EditForm Model="@model" OnValidSubmit="HandleValidSubmit">
    <DataAnnotationsValidator />
    <ValidationSummary />

    <p>
        That's an outrageous price, it's actually worth $
        <InputNumber @bind-Value="model.Answer" />
    </p>

    <button type="submit" class="btn-primary">Submit</button>
</EditForm>


@if(_isIncorrectAnswer)
{
<div class="alert-danger">
    <h2>Try again!</h2>
</div>
}



@code {
    private Random _random = new Random();
    private PuzzlePortal.Shared.SimeonWheelockModel model = new PuzzlePortal.Shared.SimeonWheelockModel();
    private bool _isIncorrectAnswer;

    private string _barcode;
    private string _price;
    private string _smallText;


    protected override async Task OnInitializedAsync()
    {
        await GenerateAPriceStickerAsync();
    }

    private async Task HandleValidSubmit()
    {
        _isIncorrectAnswer = false;
        var message = new HttpRequestMessage
        {
            Method = HttpMethod.Post,
            RequestUri = new Uri("api/SimeonWheelock/Answer", UriKind.Relative),
            Content = new StringContent(System.Text.Json.JsonSerializer.Serialize(model), System.Text.Encoding.UTF8, "application/json")
        };
        message.AddAuth(Storage);

        var response = await Http.SendAsync(message);
        if (response.EnsureAuthorized(NavigationManager))
        {
            if (response.StatusCode == System.Net.HttpStatusCode.OK)
            {
                await response.SaveAuth(Storage);
                NavigationManager.NavigateTo("progress");
            }
            else
            {
                _isIncorrectAnswer = true;
                Console.WriteLine("WRONG!");
                await GenerateAPriceStickerAsync();
            }
        }
    }

    private async Task GenerateAPriceStickerAsync()
    {
        var message = new HttpRequestMessage
        {
            Method = HttpMethod.Get,
            RequestUri = new Uri("api/SimeonWheelock/Question", UriKind.Relative)
        };
        message.AddAuth(Storage);

        var response = await Http.SendAsync(message);
        if (response.EnsureAuthorized(NavigationManager))
        {
            model = await response.ReadJsonResponse<PuzzlePortal.Shared.SimeonWheelockModel>();
        }

        _price = Price();
        _barcode = Barcode();
        _smallText = SmallText();
    }

    private string SmallText()
    {
        return $"20:4 / {_random.Next(123456709, 923456709)} / UN / {model.PriceCode}";
    }

    private string Price()
    {
        return (_random.Next(10000, 30000) / 10m).ToString("C");
    }

    private string Barcode()
    {
        return System.Web.HttpUtility.HtmlDecode(Enumerable.Range(0, 30)
            .Select(i => _random.Next(0, 3))
            .Select(i =>
                i == 0 ? "&#10074;"
                : i == 1 ? "&#10072;"
                : " ")
            .Aggregate((s, a) => s + a));
    }
}